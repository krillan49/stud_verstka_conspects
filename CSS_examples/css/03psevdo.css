/*                                               Псевдоклассы и псевдоэлементы */

/* todo: transition - перенсти из псевдоклассов в отдельный блок */

/* При помощи CSS мы можем обращаться к состояниям и определенным частям HTML блоков. Такое может происходить за счет различных псевдоэлементов и псевдоклассов */

.main_link { /* Стили для клааса main_link и описание некоторых существующих свойств */
	color: red;
	text-decoration: none;
	text-decoration-color: green;
}


/*     1. Псевдоклассы. Все псевдоклассы добавляются через двоеточие - : после селектора(применимо к любым типам селекторов) При помощи псевдоклассов мы можем управлять различными css свойствами для различных состояний какого либо объекта */


/* 1а. Псевдоклассы для ссылок: */

/*    :link - применяются исключительно для ссылок. Стили будут применены к ссылкам, на которые пользователь еще не переходил */
.main_link:link { color: #d38e8e; }

/*    :visited - псевдокласс применяющий стили к ссылке по которой мы уже переходили(остается в кэше после обновления страницы) */
.main_link:visited {
	text-decoration: line-through;
	color: gray;
}

/*    :hover - псевдокласс применяющий стили к объекту при наведении курсора на него */
.main_link:hover {
	color: blue;
	text-decoration: overline;
	text-decoration-color: red;

	cursor: pointer;

	-webkit-transition: all.6s ease; /* transition - свойство для плавности перехода hover и других эффектов */
	-moz-transition: all.6s ease;
	-o-transition: all.6s ease;
	-ms-transition: all.6s ease;
	transition: all.6s ease;
}

/*    :active - псевдокласс применяющий стили к объекту при нажатии на него */
.main_link:active { text-decoration: line-through; }

/* (ПОЯСНЕНИЕ ИЗ КОММЕНТОВ) visited должен стоять перед псевдоклассом hover, а тот в свою очередь перед active, а иначе будет работать некорректно. + если вы использовали ссылку из локальных файлов( фотка ) то она автоматом будет гореть как посещённая, поэтому попробуйте с обычной ссылкой на сайт( на неё наложиться visited только после открытия, а потом т.к в истории браузера вы посещали эту ссылку, то будет определяться как visited) */


/* 1b Псевдоклассы для полей: */

/*    :focus - псевдокласс применяющий стили к текстовому полю(input/textarea) когда оно активно */
input:focus {color: red} /* пока поле активно будет красным, а когда не активно черным(по умолчанию) */

/*    :disabled - псевдокласс применяющий стили к текстовому полю(input/textarea) когда оно содержит атрибут disabled */
input:disabled {}  /*    :anabled - аналогично для enabled;   :required - аналогично дя required(обязательные для заполнения) */


/* 1c Другие псевдоклассы:  */

/* :empty - псевдокласс применяет стили к пустым тегам */
/* p.text:empty { ...  } */

/* :not - псевдокласс применяет стили к объектам обратным к другому псевдоклассу указанному в скобках(Стили в псевдоклассе :not добавляются к элементам, которые не содержат селектор, указанный в псевдоклассе(любой тип седектора)), в данном случае это будут объекты не являющиеся пустыми */
p.text:not(:empty) {
	color: orange;
}

/* :first-of-type - псевдокласс применяет стили только к первому объекту с данным селектором */
/* :last-of-type - псевдокласс применяет стили только к последнему объекту с данным селектором */
/* :only-of-type - стили будут применены к объекту, если он единственный объект в теге. К примеру, у нас есть тег div и у него три тега p. В этом случае p:only-of-type не будет применен, так как в теге присутствует несколько таких тегов.*/
h2.h2:first-of-type {
	text-decoration: line-through;
}

/* :first-child/:last-child - Псевдокласс применяющий стили к первому/последнему дочернему элементу этого типа.  При этом, если в :first-of-type стили добавляются к первому указанному элементу, к примеру к тегу p, то здесь просто добавляется к самому первому элементу в блоке, то есть не идет учет по тегам. */
.child :first-child { background-color: red;} /* если между классом и псевдоклассом поставить пробел выберет из дочерних относительно указанного селектора тегов, а если не ставить то будет применять к тегам относящимся к данному селектору  */
.child :last-child { background-color: yellow;}
.child:first-child { background-color: silver;} /* а если не ставить пробед между селектором и псевдоэлементом, тогда применит стили к элементу заданному данным селектором если уже он сам является первым дочерним элементом некого блока уровнем выше  */
/* :nth-child(kn) - псевдокласс применяет стили к каждому k-тому дочернему элементу */
.nchild :nth-child(2n) { background-color: green;}

/* :has(> something) - Псевдокласс применяющий стили к элементу, который содержит другой элемент */
a:has(> b) {background-color: orange;}


/*     2. Псевдоэлементы. (применимо к любым типам селекторов, задается после псевдоклассов) При помощи псевдоэлементов мы можем работать с какой-то определенной частью текста внутри html-объекта. Ранее необходимо было обязательно для пседоэлементов два двоеточия. С приходом CSS3 этот момент был упрощен и теперь можно для всего прописывать лишь одно двоеточие(хотя более правильно будето всетаки 2)  */

/* ::after и ::before - псевдоэлементы добавляющие нефункциональный для пользователя текст до или после текста из тега и применить стили к этим допольнительным кусочкам текста. При помощи этих псевдоэлементов мы создаем текст как бы вне тега. Можно использовать с пустыми тегами, чтоб создавать полностью нефункциональный текст */
#after_before_id::after {
	content: '123'; /* content - свойство часто применяющееся к псевдоэлементам ::after и ::before, в значении этого свойства мы указываем какой текст будет выводиться после или до объекта */
	color: red; /* Далее все стили будут применяться только к этому дополнительному тексту (тут 123) */
	text-decoration: line-through;
	/* display: block; */  /* Так же тут применимо свойство display */
}
#after_before_id::before {
	content: attr(title); /* значением свойства content можно указать значение некого атрибута тега(тут title) */
	/* attr () предназначена для получения какого-либо атрибута из любого тега До CSS3 эта функция применялась только к свойству content, сейчас же её можно применять ко многим свойствам. */
	/* url - добавление объекта по ссылке на него. Если объекта по ссылке не будет, то будет подставлено пустое значение; */
	color: blue;
}

/* Псевдоэлементы пишутся после псевдоклассов */
p.text2:not(:empty)::after {
	content: 'cheto tam';
	color: orange;
}

/* ::first-letter - псевдоэлемент применяет стили только к первому символу в тексте */
p.f_sym::first-letter {color: red}
/* ::first-line - псевдоэлемент применяет стили только к первой строке */
p.f_lin::first-line {color: green}

/* ::selection - псевдоэлемент для выделенного(мышкой) текста(без селектора видимо для всего боди) */
::selection {color: #fff; background: #f58b8b;}
::-moz-selection {color: #fff; background: #f58b8b;} /* для отдельных браузеров мозила сафари итд */
::-webkit-selection {color: #fff; background: #f58b8b;}
::-ms-selection {color: #fff; background: #f58b8b;}















/*  */
