/*                                         Позиционирование(свойство position) */

/*
position - свойство применяемое к любому блоку, которое позиционирует его в зависимости от значения.

relative, absolute, fixed, static, sticky - значения свойства position, которые определяют способ позиционирования.

top, bottom, left, right - свойства используемые для управления местоположением, работают вместе со свойством position, если его значение не равно static. Эти свойства позиционируют объект относительно соотв стороны, те bottom:20px сдвинет блок на 20 пикселей вверх от нижней границы(bottom). Имеет смысл указывать толлько 2 свойства(1 вертикальное и 1 горизонтальное) от которых будем сдвигать.
*/

/* прижать секцию к низу страницы: position: fixed; bottom: 0 */


/*        1. relative - позиционирует объект относительно того места где он находится(относительно нормального потока) */
.box0 { width: 200px; height: 200px; border: 5px solid black; }

.item0 { width: 50px; height: 50px; background-color: black; border-radius: 100%;
  position: relative;
  top: -10px; /* позиционируем блок на 10 пикселей вверх от верхнего края текущего положения */
  left: 10px; /* позиционируем блок на 10 пикселей вправо от левого края текущего положения */
}


/*        2. absolute - позиционирует объект абсолютно - относительно верхнего левого угла страницы (и не накладывает на другие блоки, соотв ставит его выше всех других блоков ? ). Но если у этого блока есть родительский блок с position: relative то будет позиционировать относительно верхнего левого угла этого родительского блока */
.box { width: 200px; height: 200px; border: 5px solid #f00; }

.item { width: 50px; height: 50px; background-color: #f00; border-radius: 100%;
  position: absolute; /* без указания блока родителя позиционируется относительно тега body */
  top: 20px; /* сдвигается на 20 пикселей от верхнего края(соотв вниз) */
  right: 0; /* так item выйдет за правую границу блока body */
}


/*       1+2.  relative+absolute для позиционирования внутри материнского блока */
.box2 { width: 200px; height: 200px; border: 5px solid blue;
  position: relative; /* при помощи relative можно не только позиционировать блок относительно его местоположения, но и задать этот блок родительским для позиционирования внутренних блоков, теперь absolute-блоки в них будут позиционироваться относительно границ этого родительского блока вместо блока body */
}

.item2 { width: 50px; height: 50px; background-color: blue; border-radius: 100%;
  position: absolute;
  right: 0; /* теперь наш объект на правой границе родительского блока */
  bottom: 10px; /* и на 10 пикселей от нижней границы материнского блока(вверх) */
}


/*        3. fixed - позиционирует объект фиксировано относительно верхнего левого угла экрана пользователя и накладывает на другие блоки(выводит из общего потока?). Соотв объект при скроле всегда будет находится в своей позиции относительно экрана */
div p { font-size: 2em; color: gray;}

.item3 { width: 50px; height: 50px; background-color: green; border-radius: 100%;
  position: fixed; /* теперь при скроле объект будет находиться в одной позиции относительно экрана(следовать за пользователем) */
  right: 1500px;
  top: 100px; /* по умолчанию находится у верхней границы материнского блока но при указании значения позиционируется относительно верхней границы экрана */
}


/*        4. static - значение по умолчанию, возвращает объект в изначальную позицию отменяя изменения внесенные при помощи свойств top, bottom, left, right. */
.box4 { height: 200px; border: 5px solid yellow;
  width: 100%; /* делаем адаптивно чтобы блок был на всю ширину */
  max-width: 1000px; /* но не более 1000 пикселей */
  position: relative;
}

.item4 { width: 50px; height: 50px; background-color: yellow; border-radius: 100%;
  position: static; /* удобно если нужно сбросить стили позиционирования без их удаления */
  right: 100px; bottom: 50px; /* эти значения игнорируются тк position: static */
}


/*       5. sticky - сочетание относительного и фиксированного позиционирования объекта, позиционирован относительно пока не пересечет некий порог при котором начнет позиционироваться фиксировано, потом снова может позиционироваться относительно. Этот способ может поддерживаться не всеми браузерами. */
.header, .footer { border: 1px solid black;}

.sticky h2 {
  color: magenta; background-color: #d0a7ce;
  border: 3px solid magenta;
  padding: 30px;
}

.side { width: 50%; } /* чтобы для float блока .sticky было место */

.sticky {
  position: sticky; /* чтобы блок выпал из потока нужно добавить float, без этого ничего не произойдет */
  float: right;
  top: 0; /* так мы цепляем блок к верхней части экрана(как при fixed)(без свойства размещения блок не последует за экраном), но только с того момента когда экран подойдет к изначальному положению этого блока. Далее блок остановится кода дойдет до следующего блока что преграждает ему путь */
  width:50%; /* чтобы расположился справа и не вытеснял .side */
}










/*  */
