/*                                       Селекторы для выборки элементов */

/* Чем более специфичен селектор тем выше его приоритет:
Если мы меняем 1 и тоже свойство при помощи разных селекторов то у селектора класса приоритет будет больше чем у селектор тега, дже если код селектора ткга ниже
Так жк у 2йного селектора например имя тега + класса приоритет больше чем просто у класса
А если мы вложем 1 класс в друой то у этого класса приоритет еще выще */


/*     0. Универсальный селектор. Выбор всех html-объектов через селектор звездочки. Например убрать отступы по умолчанию. Не затрагивает псевдоэлементы befoe и after. Не стоит злоупотреблять им, если можно изменть чтото от селектора body то лучше так и сделать */
* {
	outline: none; /* убираем обводку по умолчанию, например у активных инпут полей */
}


/*     1. Селектор по имени/типу тега(присваивает стили ко всем тегам данного типа) */
h3 {
  background-color: yellow;
}


/*     2. Селектор по классу - (самый оптимальный для использование, тк классы гибкие и имеют среднюю специфичность) присваивает стили ко всем тегам со значением атрибута class аналогичным имени селектора. Удобен тем что можно присвоить стили группе различных конкретных тегов */
.main_text {
  color: red;
}
/* теперь ко всем тегам к которым мы хотим применить это правило, мы дописываем атрибут class="main_text" */


/*     3. Селектор по идентификатору - присваивает стили конкретному объекту с уникальным id (не принято использовать для CSS, предпочтительнее использовать класс) */
#text_in_p { /* значение айди в селекторе начинается с символа хэш(#). Желательно не называть именем тегов(старые брауз) */
  color: blue;
}


/*     4. Селектор по вложенным селекторам (селектор потомка) - присваивает стили объектом соотв конечной точке "пути" цепочки селекторов. Уровень вложенности указывать не обязательно полный если он достаточен, но тк свойства наследуются и дочерними объектами дочерних объектов, если указать только последний, к которому применяем свойство, не указывая промежуточные, то применится только к нему */
div p b {
  font-size: 1.8em;
}

/*     4а. Вложение различных типов селекторов выбора */
p.some_text { /* ?? Путь вложенности с пробелом и нет есть ли разницв и в чем ??  */
	color: blue;
}


/*     5. Группировка различных селекторов (через запятую добавляем новые селекторы ) - тогда тегам с любым из перечисленных селекторов применятся свойства. Можно перечислять в одну строку, но желательно каждый селектор в отдельной строке для читаемости */
div p b,
.any_text,
#div_text_in_p {
  color: red;
}


/*     6. Объединение селекторов для элементов с двумя и более классми(либо с классом и айди, либо с тегом и классом либо с тегом и айди), чтобы применить свойство только для тегов у которых есть все эти классы. */
.a.b {text-decoration: line-through;}  /* class="a b" */
.a { color: red;}
.b { color: blue;}


/*     7. Селектор по атрибуту - присваивает стили к тегам у которых есть данный атрибут,ы можно со значением и без. Это очень функциональный селектор, его можно испорльзовать как что-то похожее на регулярку */
/* а) применяет стили к тегам у которых есть атрибут name */
[name] {
	color: green;
}
/* б) применяет стили к тегам у которых есть атрибут name со значением some_name */
[name=some_name] { 
	text-decoration: line-through;
}
[name="some_name"] { /* (тоже что и выше) */
	font-size: 1.1em;
}
/* в) Если между именем атрибута и его значением писать не "=" а "*=", то применит стили ко всем элементам у которых в значении этого атрибута встречается подстрока, которую тут мы задали значением. Удобно например чтобы добавлять иконку ссылке */
[href*="hh.ru"] {
  padding-left: 1.2em;
  color: magenta;
}
/* г) Если между именем атрибута и его значением писать не "=" а "^=", то применит стили ко всем элементам у которых значение атрибута начинается с подстроки из значения тут  */
[href^="http://"] {
  color: green;
}
/* д) Если между именем атрибута и его значением писать не "=" а "$=", то применит стили ко всем элементам у которых значение атрибута заканчивается на подстроку из значения тут  */
[href$=".com/"] {
  background-image: linear-gradient(white 33%, blue 33%, blue 66%, red 66%);
}
/* е) Если между именем атрибута и его значением писать не "=" а "~=", то применит стили ко всем элементам у которых в значении этого атрибута встречается подстрока, которую тут мы задали значением, но в отличие от "*=" выбирает не с любой подстрокой а где это слово отделено концом строки или пробнелом от других символов */
[href~="кот"] {
  color: #666;
}
/* ж) Если между именем атрибута и его значением писать не "=" а "|=", то применит стили ко всем элементам у которых значение атрибута точно соответсвует, либо начинается на подстроку из значения тут и далее идет символ дефиса  */
[class|="warning"] {
  color: orange;
}
/* з) Любой тип сеоектора по атрибуду с оператором "i" или "I" в конце, позволяет выбирать строки или подстроки вне зависимости от их регистра. Работает только с английским алфаитом  */
[class*="cat" i] {
  color: magenta;
}

/* с вложением */
div[name] {
	background-color: gray;
}


/*     8. Дочерние селекторы - в отличие от просто вложенных выбирают не все вложенные теги а только прямых наследников и не выбирают теги что идут внутри других тегов в этом материнском теге */
#example > i { /* Дочерние селекторы выбираются при помощи символа > */
	color: magenta;
  background-color: aquamarine;
}


/*     9. Соседний (смежный, следующий) селектор. Можно присваивать стили к селектору который идет сразу за другим типом селектора, на том же уровне вложенности. Соседние селекторы выбираются при помощи символа +, стили применяются к сеектору стоящему справа от + */
span + b {
  color: #ccc051;
}


/*     9. Соседние (смежные, следующие) селекторы. Можно присваивать стили ко всем селекторам которые идут сразу за другим типом селектора, на том же уровне вложенности. Соседние селекторы выбираются при помощи символа ~, стили применяются ко всем сеекторам стоящим справа от ~ */
span ~ b {
  background-color: gray;
}



/*                                 Специфичность селекторов */

/* Помимо основного правла приоритета, когда нижестоящее правило приоритетнее вышестоящего существует вес у разных типов селекторов и чем он больше тем селектор приоритектнее. Тоесть если мы применим к одному элменту одинаковые свойства из разныъ селекторов то применится самое специфичное, если даже оно стоит выше */

/* 1. Самый специфичный вид селектора - это селектор по айди. Имеет вес как бы первого тира, вроде версии, тоесть дашшый селектор имеет вес 1.0.0 и итоговый вес = 100 */
#some_id { color: black; }

/* 2. Селекторы по классу, по атрибуту или селекторы с псевдоклассами. Имеет вес как бы второго тира, который будет 0.1.0 и итоговый вес = 10 */
.some_class { color: black; }
[class="wOw"] { color: black; }
button:disabled { color: black; }

/* 3. Селекторы по тегу или теслекторы с псевдоэлементами наименее специфичны. Имеет вес как бы третьего тира, который будет 0.0.1 и итоговый вес = 1 */
h1 { color: black; }
div::before { color: black; }

/* Вес селектора с случае объединенных селекторов (тоесть когда выбираем тег сразу по множеству селекторов, например одновременно по наличию 2х классов) то просто складвается в кадый "тир" веса соответсвующих селекторов */
div#some_id { color: black; } /*  1.0.1  = 101 */
div#some_id.some_class.some_class2 { color: black; } /* ??? может быть 2 ??? 1.2.1  = 121 */

