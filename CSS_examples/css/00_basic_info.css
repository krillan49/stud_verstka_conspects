/* https://doka.guide/css/             - cовременный справочник по CSS */
/* https://developer.mozilla.org/ru/   - cправочник по фронтенду "MDN" от разработчиков Mozilla Firefox */

/* синтаксис комментария в CSS */
/* можно выделить часть кода в css файле и нажать "Ctrl"+"/" так комментировать эффективней и быстрее */

/* Очистите кэш страницы если не реагирует на изменения в css фаиле - ctrl + shift + R (Mac: cmd + shift + r) */

/* Проверка валидности
Во время создания стилей нередко появляются неясности в отношении правильности их указания и корректности. В данном случае на помощь приходит валидатор CSS, доступный по этой ссылке.
https://jigsaw.w3.org/css-validator/ */



/*                                          CSS - общая информация */

/* Содержимое страницы и то как она выглядит это разные вещи и они не должны пересекаться:
HTML - это содержимое страницы (тот материал, текст, контент, что мы хотим на нее выложить)
CSS - это способ/подход это содержимое оформить красиво
*/

/* CSS - Cascading Style Sheets - каскадные таблицы стилей(язык стилей для объектов html). Это набор правил, по которым браузер определяет как должен выглядеть каждый элемент на странице. Те у каждого элемента/ноды HTML есть множество свойств (например у теста размер цвет, отступы, расстояния между символами итд) и CSS позволет нам меняь значения этих свойств. Нужна для того чтобы придать оформление сайту. Все оформление можно делать и в HTML-коде, но использование стилей намного удобнее. Он позволяет указать стилевое оформление каждого из HTML элементов. Также за счёт CSS можно указывать стили для файлов с XML-разметок: XUL, SVG и прочие */

/* Синтаксис css стилей состоит из "правил", каждое правило состоит из 2 основных элементов: */
/* 1. Селектор(тут body) - он обращается к объектам в html-коде и указывает целевой элемент, которому назначается стиль */
/* 2. Блок объявления стилей – сообщает браузеру нужные правила форматирования. Блок стилей содержит названиея свойства (тут например font-family) они опистывают тип стиля, далее через двоеточие указывается значение свойства (сам стиль) */
body { /* Фигурные скобки можно ставить по разному, можно и в 1 строку и с новой строки после селектора */
	font-family: Arial;
  background-color: red;
	width: 100px; height: 60px;  /* новые свойства можно писать как в строку так и в столбик. последовательность не важна */
	background-color: lightblue; /* Если прописаны 2 одинаковых свойства, то сработает последнее */
	/* Число свойств в одном правиле неограничено */
}

/* Нет смысла заучивать все свойства, тк их очень много, нужно знать только основные, а остальные изучать по мере необходимости */



/*                                   Источники стилей (каскад) */

/* Каскад - механизм определяющий порядок применения стилей к элементу по специфичности и источнику стиля. Так же каскад позволяет наследовать свойства от родительских элементов и переопредлять их дочерним */

/* Специфичность - вес правила, чем выше тем приоритетнее, тоесть самое приоритетное правило применится к эементу, а остальные для таких же свойств нет. Например правило заданное в атрибуте style специфичнее чем правило заданное в теге style.  Так же зависит от типа и сложности селектора */

/* На специфичность влияет много факторов, но в основном специфичность определяется положением правила в коде, чем оно ниже тем специфичнее. Если для 1 свойства несколько раз установить значение, то приоритетнее будет то что ниже в коде, тоесть написано после */

/* Большинство HTML-элементов поддерживают установку стилей посредством атрибутов тегов, например, отдельным элементам есть возможность указать атрибуты width и height. Значения в атрибутах имеют высший приоритет, все прочие теги, подпадающие под общие селекторы, будут иметь стили с CSS-файла */

/* Далее от наименее приоритетных к наиболее приоритетным стилям: */
/* 1. Браузерные стили - каждый браузер задает некоторым элементам свои стили (например отступы) */
/* 2. Пользовательскиме стили - стили браузерных расширений, например Адблок, который скрывает рекламные блоки при помощи CSS */
/* 3. Авторские стили - стили написанные разработчиками */
/* 4. Стили во время анимаций (свойство animation) */
/* 5. Авторские с !important */
/* 6. Пользовательские с !important */
/* 7. Браузерные с !important */
/* 8. Стили во время переходов (свойство transition) */



/*                                         Наследование */

/* Наследование - это способность элементов перенимать наследуемые свойства своих предков, если внутри тега со стилем есть вложенный тег, то стиль распространяется и на него если для этого тега не прописать отдельно другой стиль. Тоесь если свойство наследуемое можно прописывать его материнскому элементу и дочерние элементы его унаследуют */

/* Большинство свойств не наследуются */

/* Полный список всех наслеуемых свойств: */
/* font (font-style, font-variant, font-weight, font-stretch, font-size, font-family */
/* line-height, letter-spacing, word-spacing, white-space */
/* text-align, text-indent, text-shadow, text-transform */
/* color */
/* list-style, list-style-type, list-style-position */
/* cursor, visibility */