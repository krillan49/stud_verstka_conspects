/*                                  Позиционирование блоков(свойства: float, z-index, overflow) */

/* Флоат потом объединить с menu-float ?? */

/* Блочные объекты по умолчанию располагаются друг под другом вертикально(тк занимают 100% ширины экрана). При помощи CSS свойств мы можем менять расположение блоков относительно друг друга и на странице в целом */

.block { width: 200px; height: 200px; margin: 20px;	} /* Общие стили для блоков */

/* Изменение расположения объектов при помощи свойства float, после чего блок будет позиционироваться с какой-либо стороны, а все дополнительные элементы будут обтекать его. Уместнее всего использовать float для обтекания картинки текстом но раньше при помощи него делалось все позиционирование */
#first_block {
	background: red;
	float: left; /* left(или right/none) - значение свойства float, означает что блок #first_block будет прижат к левой стороне и другие объекты(не только блоки) его смогут обтекать справа(но для этого им тоже нужно добавить свойство float(только блокам другие объекты будут обтекать и так), а иначе они будут наслаиваться) */
}
#second_block {
	background: blue;
	float: left; /* Теперь оба блока позиционируются слева друг за другом(след относительно предыдущего на одной "линии") */
}
#third_block {
	background: green;
	float: right; /* Позиционируем 3й блок справа */
	/* clear: right;*/ /* Запрещаем позиционирование справа от этого блока */
}

/* При добавлении внутреннего блока в html коде, чтобы он корректно отображался ему тоже можно добавть float */


/* Исправляем проблемы со свойством float у предыдущего блока(след блок без свойства float наложится на него). "добавить пустой div со стилем clear: both перед следующим блоком" */
#clear_block {
	clear: both; /* clear: - свойство clear необходимо для удаления действия float с определенной стороны.(удаляет обтекание объекта текстом, картинками и прочем с какой-либо стороны.)
	left - удаление обтекания с левой стороны;
	right - удаление обтекания с правой стороны;
	both - удаление обтекания с обеих сторон; none - значение по-умолчанию (обтекание со всех сторон). */
} /* Размещаем пустой блок запрещающий свойство float в обе стороны от себя */


/*         Использование слоев(иерархия слоев) (потом переместить в position ??) */

/* По умолчанию у более раннего(в расположении в html-коде) блока слой при наложении будет считаться более низким, соотв он будет помещаться под следующий блок. Это можно менять при помощи свойств position и z-index */
#f_block {
	background: magenta; width: 300px; height: 300px;

	position: relative; /* свойство z-index не будет работать без свойства position */
	z-index: 1; /* Ставим z-index с более высоким значением чем в след блоке и теперь этот блок будет поверх следующего */
}
#s_block {
	background: yellow; width: 300px; height: 300px;

	position: relative;
	top: -150px; /* изменяем относительное положение блока при помощи свойства position чтобы он наслаивался на предыдущий(изначальное положение блока остается этим блоком те будет промежуток визуально) */
	right: -150px;
	z-index: 0; /* Ставим z-index с более низким значением чем в пред блоке и теперь этот блок будет под предыдущим(можно указывать отрицательные значения) */
}


/*         Позиционирование элементов внутри блока(свойство overflow) */
/* Если для блока указать ширину и высоту, то находящийся внутри блока контент не всегда может помещаться в заданные рамки. Чтобы указать правило отображения контента внутри блока можно использовать свойство overflow. При этом вы можете добавлять overflow для конкретных осей:
overflow-y будет применять значения только по оси y,
overflow-x только по оси x. */
#block_text1, #block_text2, #block_text3, #block_text4 {
	height: 100px; width: 200px;
	color: white; background-color: gray;
	border: 5px solid magenta;
	margin: 30px;
	float: left;
} /* Изначально текст слишком большой для данных блоков и вылезает за их границы по высоте */

#block_text2 {
	overflow: hidden; /* overflow - свойство позиционирующее объеты(тут текст) внутри блока.
	visible - значение по умолчанию элементы за границами блока отображаются;
	hidden - элементы которые вылезают скрыты;
	scroll - элементы которые вылезает скрыты и есть полосы прокрутки(и горизонтальной и вертикальной) чтобы их посмотреть;
	auto - добавляет только те полосы прокрутки которые необходимы для данных соотношений размеров блока и элементов внутри него */
}
#block_text3 {overflow: scroll;}
#block_text4 {overflow: auto;}















/*  */
